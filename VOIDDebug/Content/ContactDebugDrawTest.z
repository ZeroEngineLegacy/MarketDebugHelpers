class ContactDebugDrawTest : ZilchComponent
{
    function Initialize(init : CogInitializer)
    {
        //Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
    }
}


class SimpleInput : ZilchComponent
{
    
    [Property]
    var ForwardKey : Keys = Keys.W;
    
    [Property]
    var BackwardKey : Keys = Keys.S;
    
    [Property]
    var LeftKey : Keys = Keys.A;
    
    [Property]
    var RightKey : Keys = Keys.D;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        var moveDir = Real3();
        if(Zero.Keyboard.KeyIsDown(this.ForwardKey))
            moveDir.Y += 1;
        if(Zero.Keyboard.KeyIsDown(this.BackwardKey))
            moveDir.Y += -1;
            
        
        if(Zero.Keyboard.KeyIsDown(this.LeftKey))
            moveDir.X += 1;
        if(Zero.Keyboard.KeyIsDown(this.RightKey))
            moveDir.X += -1;
        
        this.Owner.Transform.Translation = Math.Lerp(this.Owner.Transform.Translation, this.Owner.Transform.Translation + moveDir, 5.0 * event.Dt);
    }
}